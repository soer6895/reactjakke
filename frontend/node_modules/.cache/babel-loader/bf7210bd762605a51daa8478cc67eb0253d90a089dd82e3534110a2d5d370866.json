{"ast":null,"code":"var _jsxFileName = \"/Users/sorendahlmann/Desktop/Projekter/reactjakke/frontend/src/nfcCon.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif ('NDEFReader' in window) {/* Scan and write NFC tags */}\nfunction NfcCon() {\n  _s();\n  const location = useLocation();\n  const phoneNumber = location.state.phoneNumber;\n  const countryCode = location.state.countryCode;\n  async function readNFC() {\n    try {\n      const reader = new NDEFReader();\n      await reader.scan();\n      reader.onreading = event => {\n        const decoder = new TextDecoder();\n        for (const record of event.message.records) {\n          console.log(\"Record type: \", record.recordType);\n          console.log(\"Data: \", decoder.decode(record.data));\n        }\n      };\n    } catch (error) {\n      console.error(\"Error reading NFC: \", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-200 flex flex-col items-center justify-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4 text-3xl font-bold\",\n      children: \"NFC Reader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-8 text-lg\",\n      children: \"Scan an NFC tag with your device.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mb-4 p-4 rounded bg-blue-500 hover:bg-blue-600 text-white\",\n      onClick: readNFC,\n      children: \"Start NFC Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2 font-medium\",\n        children: \"Details from Previous Page:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone Number: \", phoneNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Country Code: \", countryCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(NfcCon, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = NfcCon;\nexport default NfcCon;\nvar _c;\n$RefreshReg$(_c, \"NfcCon\");","map":{"version":3,"names":["useLocation","jsxDEV","_jsxDEV","window","NfcCon","_s","location","phoneNumber","state","countryCode","readNFC","reader","NDEFReader","scan","onreading","event","decoder","TextDecoder","record","message","records","console","log","recordType","decode","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sorendahlmann/Desktop/Projekter/reactjakke/frontend/src/nfcCon.js"],"sourcesContent":["import { useLocation } from 'react-router-dom';\n\nif ('NDEFReader' in window) { /* Scan and write NFC tags */ }\n\nfunction NfcCon() {\n    const location = useLocation();\n\n    const phoneNumber = location.state.phoneNumber;\n    const countryCode = location.state.countryCode;\n\n    async function readNFC() {\n        try {\n            const reader = new NDEFReader();\n\n            await reader.scan();\n            reader.onreading = event => {\n                const decoder = new TextDecoder();\n                for (const record of event.message.records) {\n                    console.log(\"Record type: \", record.recordType);\n                    console.log(\"Data: \", decoder.decode(record.data));\n                }\n            };\n        } catch (error) {\n            console.error(\"Error reading NFC: \", error);\n        }\n    }\n\n    return (\n        <div className=\"min-h-screen bg-gray-200 flex flex-col items-center justify-center p-4\">\n            <h1 className=\"mb-4 text-3xl font-bold\">NFC Reader</h1>\n            <p className=\"mb-8 text-lg\">Scan an NFC tag with your device.</p>\n            <button\n                className=\"mb-4 p-4 rounded bg-blue-500 hover:bg-blue-600 text-white\"\n                onClick={readNFC}\n            >\n                Start NFC Scan\n            </button>\n            <div className=\"text-center\">\n                <p className=\"mb-2 font-medium\">Details from Previous Page:</p>\n                <p>Phone Number: {phoneNumber}</p>\n                <p>Country Code: {countryCode}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default NfcCon;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,IAAI,YAAY,IAAIC,MAAM,EAAE,CAAE;AAE9B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,WAAW,GAAGD,QAAQ,CAACE,KAAK,CAACD,WAAW;EAC9C,MAAME,WAAW,GAAGH,QAAQ,CAACE,KAAK,CAACC,WAAW;EAE9C,eAAeC,OAAOA,CAAA,EAAG;IACrB,IAAI;MACA,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/B,MAAMD,MAAM,CAACE,IAAI,CAAC,CAAC;MACnBF,MAAM,CAACG,SAAS,GAAGC,KAAK,IAAI;QACxB,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,CAAC;QACjC,KAAK,MAAMC,MAAM,IAAIH,KAAK,CAACI,OAAO,CAACC,OAAO,EAAE;UACxCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,MAAM,CAACK,UAAU,CAAC;UAC/CF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,OAAO,CAACQ,MAAM,CAACN,MAAM,CAACO,IAAI,CAAC,CAAC;QACtD;MACJ,CAAC;IACL,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ;EAEA,oBACIxB,OAAA;IAAKyB,SAAS,EAAC,wEAAwE;IAAAC,QAAA,gBACnF1B,OAAA;MAAIyB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvD9B,OAAA;MAAGyB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjE9B,OAAA;MACIyB,SAAS,EAAC,2DAA2D;MACrEM,OAAO,EAAEvB,OAAQ;MAAAkB,QAAA,EACpB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT9B,OAAA;MAAKyB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxB1B,OAAA;QAAGyB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC/D9B,OAAA;QAAA0B,QAAA,GAAG,gBAAc,EAACrB,WAAW;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC9B,OAAA;QAAA0B,QAAA,GAAG,gBAAc,EAACnB,WAAW;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3B,EAAA,CAxCQD,MAAM;EAAA,QACMJ,WAAW;AAAA;AAAAkC,EAAA,GADvB9B,MAAM;AA0Cf,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}