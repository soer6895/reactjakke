{"ast":null,"code":"var _jsxFileName = \"/Users/sorendahlmann/Desktop/Projekter/reactjakke/frontend/src/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  let [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  let [loading, setLoading] = useState(false);\n  let loginUser = async e => {\n    e.preventDefault();\n    console.log(\"Form submitted\");\n    let response = await fetch('http://127.0.0.1:8000/accounts/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate('/');\n    } else {\n      alert(\"Something went wrong\");\n    }\n  };\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate('/login');\n  };\n  let updateToken = async () => {\n    console.log(\"Updating token called\");\n\n    // Check if refresh token exists\n    if (!(authTokens !== null && authTokens !== void 0 && authTokens.refresh)) {\n      console.log(\"Refresh token is not present. Logging out...\");\n      logoutUser();\n      return;\n    }\n    let response = await fetch('http://127.0.0.1:8000/accounts/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens.refresh\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n    } else {\n      console.log(\"Token refresh failed. Logging out...\");\n      logoutUser();\n      if (loading) {\n        setLoading(false);\n      }\n    }\n  };\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    let fourMinutes = 1000 * 60 * 40;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"KqPkDPNSKkZ/DYtMmee8bMumEuA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","loginUser","e","preventDefault","console","log","response","fetch","method","headers","body","stringify","target","username","value","password","data","json","status","access","setItem","navigate","alert","logoutUser","removeItem","updateToken","refresh","contextData","fourMinutes","interval","setInterval","clearInterval","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sorendahlmann/Desktop/Projekter/reactjakke/frontend/src/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\n\nexport const AuthProvider = ({ children }) => {\n\n    let [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n    let [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n    let [loading, setLoading] = useState(false);\n\n\n\n    let loginUser = async (e) => {\n        e.preventDefault();\n        console.log(\"Form submitted\");\n        let response = await fetch('http://127.0.0.1:8000/accounts/token/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ 'username': e.target.username.value, 'password': e.target.password.value })\n        })\n        let data = await response.json();\n\n        if (response.status === 200) {\n            setAuthTokens(data);\n            setUser(jwt_decode(data.access))\n            localStorage.setItem(\"authTokens\", JSON.stringify(data));\n            navigate('/')\n        } else {\n            alert(\"Something went wrong\")\n        }\n    }\n\n    let logoutUser = () => {\n        setAuthTokens(null);\n        setUser(null);\n        localStorage.removeItem(\"authTokens\");\n        navigate('/login')\n\n    }\n\n\n    let updateToken = async () => {\n        console.log(\"Updating token called\")\n\n        // Check if refresh token exists\n        if (!authTokens?.refresh) {\n            console.log(\"Refresh token is not present. Logging out...\")\n            logoutUser();\n            return;\n        }\n\n        let response = await fetch('http://127.0.0.1:8000/accounts/token/refresh/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ 'refresh': authTokens.refresh })\n        })\n        let data = await response.json();\n\n        if (response.status === 200) {\n            setAuthTokens(data);\n            setUser(jwt_decode(data.access))\n            localStorage.setItem(\"authTokens\", JSON.stringify(data));\n        } else {\n            console.log(\"Token refresh failed. Logging out...\")\n            logoutUser()\n            if (loading) {\n                setLoading(false)\n            }\n        }\n    }\n\n    let contextData = {\n        user: user,\n        authTokens: authTokens,\n        loginUser: loginUser,\n        logoutUser: logoutUser,\n    }\n\n\n    useEffect(() => {\n        if (loading) {\n            updateToken();\n        }\n        let fourMinutes = 1000 * 60 * 40;\n        let interval = setInterval(() => {\n            if (authTokens) {\n                updateToken();\n            }\n        }, fourMinutes);\n        return () => clearInterval(interval);\n    }, [authTokens, loading]);\n\n\n\n\n    return (\n        <AuthContext.Provider value={contextData}>\n            {loading ? null : children}\n\n        </AuthContext.Provider>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}