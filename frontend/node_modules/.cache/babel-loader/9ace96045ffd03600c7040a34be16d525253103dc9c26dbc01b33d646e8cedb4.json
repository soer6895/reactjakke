{"ast":null,"code":"var _jsxFileName = \"/Users/sorendahlmann/Desktop/Projekter/reactjakke/frontend/src/nfcCon.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NfcCon() {\n  _s();\n  const location = useLocation();\n  const phoneNumber = location.state.phoneNumber;\n  const countryCode = location.state.countryCode;\n  async function readNFC() {\n    const ndef = new NDEFReader();\n    try {\n      await ndef.scan();\n      console.log(\"Scan started successfully.\");\n      ndef.onreadingerror = () => {\n        console.log(\"Cannot read data from the NFC tag. Try another one?\");\n      };\n      ndef.onreading = event => {\n        console.log(\"NDEF message read.\");\n        const message = event.message;\n        for (const record of message.records) {\n          console.log(\"Record type:  \" + record.recordType);\n          console.log(\"MIME type:    \" + record.mediaType);\n          console.log(\"Record id:    \" + record.id);\n          switch (record.recordType) {\n            case \"text\":\n              // TODO: Read text record with record data, lang, and encoding.\n              break;\n            case \"url\":\n              // TODO: Read URL record with record data.\n              break;\n            default:\n            // TODO: Handle other records with record data.\n          }\n        }\n      };\n    } catch (error) {\n      console.log(`Error! Scan failed to start: ${error}.`);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-200 flex flex-col items-center justify-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4 text-3xl font-bold\",\n      children: \"NFC Reader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-8 text-lg\",\n      children: \"Scan an NFC tag with your device.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mb-4 p-4 rounded bg-blue-500 hover:bg-blue-600 text-white\",\n      onClick: readNFC,\n      children: \"Start NFC Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2 font-medium\",\n        children: \"Details from Previous Page:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone Number: \", phoneNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Country Code: \", countryCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(NfcCon, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = NfcCon;\nexport default NfcCon;\nvar _c;\n$RefreshReg$(_c, \"NfcCon\");","map":{"version":3,"names":["useLocation","jsxDEV","_jsxDEV","NfcCon","_s","location","phoneNumber","state","countryCode","readNFC","ndef","NDEFReader","scan","console","log","onreadingerror","onreading","event","message","record","records","recordType","mediaType","id","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sorendahlmann/Desktop/Projekter/reactjakke/frontend/src/nfcCon.js"],"sourcesContent":["import { useLocation } from 'react-router-dom';\n\nfunction NfcCon() {\n    const location = useLocation();\n\n    const phoneNumber = location.state.phoneNumber;\n    const countryCode = location.state.countryCode;\n\n    async function readNFC() {\n        const ndef = new NDEFReader();\n\n        try {\n            await ndef.scan();\n\n            console.log(\"Scan started successfully.\");\n\n            ndef.onreadingerror = () => {\n                console.log(\"Cannot read data from the NFC tag. Try another one?\");\n            };\n\n            ndef.onreading = event => {\n                console.log(\"NDEF message read.\");\n\n                const message = event.message;\n\n                for (const record of message.records) {\n                    console.log(\"Record type:  \" + record.recordType);\n                    console.log(\"MIME type:    \" + record.mediaType);\n                    console.log(\"Record id:    \" + record.id);\n\n                    switch (record.recordType) {\n                        case \"text\":\n                            // TODO: Read text record with record data, lang, and encoding.\n                            break;\n                        case \"url\":\n                            // TODO: Read URL record with record data.\n                            break;\n                        default:\n                        // TODO: Handle other records with record data.\n                    }\n                }\n            };\n        } catch (error) {\n            console.log(`Error! Scan failed to start: ${error}.`);\n        }\n    }\n\n    return (\n        <div className=\"min-h-screen bg-gray-200 flex flex-col items-center justify-center p-4\">\n            <h1 className=\"mb-4 text-3xl font-bold\">NFC Reader</h1>\n            <p className=\"mb-8 text-lg\">Scan an NFC tag with your device.</p>\n            <button\n                className=\"mb-4 p-4 rounded bg-blue-500 hover:bg-blue-600 text-white\"\n                onClick={readNFC}\n            >\n                Start NFC Scan\n            </button>\n            <div className=\"text-center\">\n                <p className=\"mb-2 font-medium\">Details from Previous Page:</p>\n                <p>Phone Number: {phoneNumber}</p>\n                <p>Country Code: {countryCode}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default NfcCon;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}